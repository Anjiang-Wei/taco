[0 - 20002edff8b0]    0.365060 {1}{nsmapper}: Inside create_mappers local_procs.size() = 6
[0 - 20002edff8b0]    0.365140 {1}{nsmapper}: Policy file: mappings_bp
[0 - 20002edff8b0]    0.365999 {1}{nsmapper}: init_cublas inserted
[0 - 20002edff8b0]    0.366008 {1}{nsmapper}: task_3 inserted
[0 - 20002edff8b0]    0.366015 {1}{nsmapper}: task_4 inserted
[0 - 20002edff8b0]    0.366021 {1}{nsmapper}: task_5 inserted
[0 - 20002edff8b0]    0.366028 {1}{nsmapper}: task_1 inserted
[0 - 20002edff8b0]    0.366034 {1}{nsmapper}: task_2 inserted
[0 - 20002edff8b0]    0.366180 {2}{mapper}: Memories on rank 0:
[0 - 20002edff8b0]    0.366190 {2}{mapper}:   1e00000000000000 (SYSTEM_MEM)
[0 - 20002edff8b0]    0.366196 {2}{mapper}:   1e00000000000001 (GPU_FB_MEM)
[0 - 20002edff8b0]    0.366201 {2}{mapper}:   1e00000000000002 (GPU_FB_MEM)
[0 - 20002edff8b0]    0.366207 {2}{mapper}:   1e00000000000003 (GPU_FB_MEM)
[0 - 20002edff8b0]    0.366212 {2}{mapper}:   1e00000000000004 (GPU_FB_MEM)
[0 - 20002edff8b0]    0.366218 {2}{mapper}:   1e00000000000005 (Z_COPY_MEM)
[0 - 20002edff8b0]    0.366223 {2}{mapper}:   1e00000000000006 (HDF_MEM)
[0 - 20002edff8b0]    0.366229 {2}{mapper}:   1e00000000000007 (FILE_MEM)
[0 - 20002edff8b0]    0.366234 {2}{mapper}: Processors on rank 0:
[0 - 20002edff8b0]    0.366240 {2}{mapper}:   1d00000000000000 (UTIL_PROC) can see 1e00000000000000(bw=100) 1e00000000000005(bw=40) 1e00000000000006(bw=5) 1e00000000000007(bw=5)
[0 - 20002edff8b0]    0.366246 {2}{mapper}:   1d00000000000001 (LOC_PROC) can see 1e00000000000000(bw=100) 1e00000000000005(bw=40) 1e00000000000006(bw=5) 1e00000000000007(bw=5)
[0 - 20002edff8b0]    0.366251 {2}{mapper}:   1d00000000000002 (OMP_PROC) can see 1e00000000000000(bw=100) 1e00000000000005(bw=40)
[0 - 20002edff8b0]    0.366257 {2}{mapper}:   1d00000000000003 (TOC_PROC) can see 1e00000000000001(bw=200) 1e00000000000002(bw=10) 1e00000000000003(bw=10) 1e00000000000004(bw=10) 1e00000000000005(bw=20)
[0 - 20002edff8b0]    0.366262 {2}{mapper}:   1d00000000000004 (TOC_PROC) can see 1e00000000000001(bw=10) 1e00000000000002(bw=200) 1e00000000000003(bw=10) 1e00000000000004(bw=10) 1e00000000000005(bw=20)
[0 - 20002edff8b0]    0.366267 {2}{mapper}:   1d00000000000005 (TOC_PROC) can see 1e00000000000001(bw=10) 1e00000000000002(bw=10) 1e00000000000003(bw=200) 1e00000000000004(bw=10) 1e00000000000005(bw=20)
[0 - 20002edff8b0]    0.366273 {2}{mapper}:   1d00000000000006 (TOC_PROC) can see 1e00000000000001(bw=10) 1e00000000000002(bw=10) 1e00000000000003(bw=10) 1e00000000000004(bw=200) 1e00000000000005(bw=20)
[0 - 20002edaf8b0]    0.367277 {1}{nsmapper}: NSMapper select_task_options in ns_mapper
[0 - 20002edaf8b0]    0.367321 {1}{nsmapper}: Task top_level is initially mapped to GPU
[0 - 20002edaf8b0]    0.367345 {1}{nsmapper}: Mapping top_level onto GPU cannot satisfy with validation, try next
[0 - 20002edaf8b0]    0.367352 {1}{nsmapper}: Task top_level is initially mapped to OMP
[0 - 20002edaf8b0]    0.367371 {1}{nsmapper}: top_level mapped to OMP
[0 - 20002edaf8b0]    1.499433 {5}{default_mapper}: Default mapper failed allocation of size 1599969312 bytes for region  requirement 0 of task task_2 (UID 1152) in memory 1e00000000000002 (GPU_FB_MEM) for processor 1d00000000000004 (TOC_PROC). This means the working set of your application is too big for the allotted capacity of the given memory under the default mapper's mapping scheme. You have three choices: ask Realm to allocate more memory, write a custom mapper to better manage working sets, or find a bigger machine.
